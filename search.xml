<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语如何断句？</title>
      <link href="/2019/03/ying-yu-duan-ju.html"/>
      <url>/2019/03/ying-yu-duan-ju.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-英语不是一个词一个词地说的"><a href="#1-英语不是一个词一个词地说的" class="headerlink" title="1. 英语不是一个词一个词地说的"></a>1. 英语不是一个词一个词地说的</h2><p>可以按语义和语法的关系，把句子分为若干段，每一段就是一个意群。意群就是可以构成一个相对独立意思的一段，是组成句子的部件。</p><p>意群和意群之间可以有一定的停顿，这种停顿和人们的思维活动是一致的。但一个意群中的各个单词之间则不可停顿，整个意群读下来就像一个长单词一样。</p><blockquote><p>提醒：意群之间是否停顿，根据说话人的情况而定，并非一定要停顿不可。但如有停顿，则必须在意群之间，随意乱停就破坏了语言的节奏。</p></blockquote><h2 id="2-输入时要按“意群”迅速理解"><a href="#2-输入时要按“意群”迅速理解" class="headerlink" title="2. 输入时要按“意群”迅速理解"></a>2. 输入时要按“意群”迅速理解</h2><p>不要崇拜词汇量，单词认识是一回事，在文中能理解又是另一回事。很多人正因为英文读得少，就天真地以为：</p><ul><li>认识单词 = 理解句意，</li><li>理解句意 = 快速地理解句意。</li></ul><p>这中间的差距用幂率来描述都不为过。</p><p>其实单词的进阶有三个过程：</p><blockquote><p>1）消除陌生感，掌握词汇的基本含义；<br>2）精确认知单词的义项，语义理解无偏差；<br>3）掌握单词的作用环境，输出时能用对，输入时按“意群”迅速理解。</p></blockquote><p>词汇功底是一辈子的事，等你真心觉得词汇量不是最关键环节的时候（说明你自己的词汇量大了，并且开始关注单词的理解和运用环境），你的英语学习也就开始走上正轨了。</p><p>例句：</p><blockquote><p>He has not addressed the issue of the strike demands.</p></blockquote><p>这个句子中你对<code>address</code>在这里的意思不理解，那你就没有掌握这个词，从这个角度而言（也是最重要的角度），这个词算在你的词汇量里就没有意义。</p><p>在上面这个句子里，address 为什么会是“处理，解决”的意思？那是因为它后面跟了 issue。在词汇功底扎实的人眼里，address 和 issue 几乎是同时映入眼帘然后一起处理的，而不是单独判断 address 在这里是“处理”，然后再看到 issue 这个词。</p><p>这就是上面讲的按“意群”理解，它的基础是对单词意义的精确理解和搭配环境的了然于胸，而不是去搞眼睛扫射的“意群训练”，不能本末倒置。</p><h2 id="3-熟悉语言的配方"><a href="#3-熟悉语言的配方" class="headerlink" title="3. 熟悉语言的配方"></a>3. 熟悉语言的配方</h2><p>无论听说读写，都是把已知的语言信息存储在大脑中，形成一个数据库。输入时需要做信息匹配，输出时就是调用表达，并且它们是作为一个整体存储在大脑中的，等到某一个语块一出现，你就能在段落中分辨出来。</p><p>语言既是一个以语法为基础的、可分析的、相对封闭的系统，又是一个以记忆为基础的、程式化（即语块化）的、相对开放的系统。</p><ul><li>如果从实际操作出发，在掌握基础语法知识后，更推荐的做法是把重点放在语块的积累和运用上，而不是像过去一味只重视语法和单词。</li></ul><p>语块的概念非常基础，带着这个概念去规划你的学习会事半功倍。</p><p>很多人都自认为阅读比听力好，但真正的原因是因为你没有把时间限制考虑进去。听力只有一次，听不懂就是不懂，并且语速由对方控制，你没有主动权。但阅读，相对而言，你可以慢慢处理信息。</p><p>从阅读速度角度看，外语学习者的阅读过程和母语学习者有着本质区别。<strong>前者训练的是语块解析、匹配的能力，后者是考察信息解析、感知的能力。</strong></p><p>外语学习者几乎是从零开始构建大脑中的语块数据库，无论阅读还是听力，本质上都是做语块输入解析的工作，只是渠道上看一个是用眼睛一个是用耳朵；但母语学习者通过十几年的听力训练，已经储存足够数量的语块，接下来要做的只不过是认字和完善认知结构。</p><p>从这里可以看出，<strong>外语学习者侧重点是语块积累</strong>，而母语者恰恰在学前就完成了这个过程，虽然不会阅读但只是语块的音和形统一不起来而已。</p><p>这个概念一定要把握好，你需要提高什么？这是很关键的地方，不要邯郸学步，东施效颦。</p><h2 id="4-提高语义透明度"><a href="#4-提高语义透明度" class="headerlink" title="4. 提高语义透明度"></a>4. 提高语义透明度</h2><p>传统英语学习方法中有精读和泛读之分，在我看来其实只是语块积累的不同手段而已。这里引入一个叫 “语义透明度”(semantic opacity)的概念。可以用它来参数化不同语块的可理解程度。</p><p>有些语块完全不需要提前接触就能知道它的意思，比如你可能并不知道“政治体制”怎么说，之前也没碰到过，但看到<code>political structure</code>还是能知道它什么意思，这时候你可以把这个语块的语义透明度设置地很高，比如<code>95%</code>；</p><p>有些语块虽然没接触过，需要你停顿一下想一想。比如面对<code>sense the dawning of a sea change</code>，你可能觉得有点陌生，需要停顿下来思考，但理解起来也没问题，这时候可以将它的语义透明度设置为<code>60%</code>；</p><p>有些语块就比较猥琐，你可能很难从字面意思联想到其引申含义（隐喻），比如<code>take the bull by the horns</code>，字面意思是“抓住牛角”，其整体的引申义是“解决问题”，这时候你可以把它的语义透明度设为<code>10%</code>。</p><p>语言输入过程中，你需要做的就是提高所有语块的语义透明度，把<code>95%</code>的提高成<code>98%</code>，<code>60%</code>的提高成<code>90%</code>，<code>10%</code>的提高成<code>85%</code>。</p><p>至于精读，泛读还是其他，它们都是针对不同语块，提高其语义透明度的手段。</p><p>有了一定词汇量后，利用语块原理，借助电子词典进行广泛阅读是可行的。</p><p>虽然很多词你认识，很多语块你知道意思，但他们的语义透明度并不一样。我们大脑就像 CPU，每当你碰到语义透明度低的语块就需要占用更多内存。</p><p>通过大量的阅读，可以把熟悉的变成会主动表达的，把不熟悉的变成熟悉的，把不知道的变成知道的，这样你这台电脑的处理能力虽然没变，但软件占用内存越来越小，速度也就越来越快了。</p><p><strong>阅读速度是衡量外语学习者英语能力非常重要的维度，它折射出的是语块积累的广度和深度。</strong></p><p>最后，说明一个立场。和语块语义透明度相比，以单词为手段来测量英语水平简直是工业文明和农耕文明的差别。用词汇量来衡量英语能力在统计意义上是一种低成本的有效手段，但具体到个人的学习规划，切勿刻舟求剑。</p><h2 id="5-用语块理念规划听力"><a href="#5-用语块理念规划听力" class="headerlink" title="5. 用语块理念规划听力"></a>5. 用语块理念规划听力</h2><p>文字不同于声音，前者写法单一，最多只有英式拼写和美式的区别，但后者的不确定性非常大，口音、语速都会是非常大的障碍，所以用语块理念去指导听力学习更有必要。</p><blockquote><p>很多人因为没有语块数据库的概念，又因为阅读没有硬性时间限制，就养成一个一个单词辨识的习惯，并且误认为是再正常不过的事。但是，这种底层构建的认知方式放在听力中是非常致命的——既听不清楚也来不及反应。</p></blockquote><p>我们还是把大脑看成一台计算机，它处理语言信息时是以某一单元为基础拟合出整句意思的，如果这个过程是以单词而非语块为数据单元做数值分析，那数据量的提高是指数级的，时间不变的前提下就对大脑的计算性提出极高的要求。</p><p>我们大脑高速缓存区可短时间内处理 5-9 个单词的信息，超过这个长度容易死机，少于这个长度是浪费计算空间，要好好利用这个特性。</p><p>此外，语块的标准有多种，语音标准便是其一。</p><p>语块具有两个语音特征：</p><ul><li>一是语流顺畅; </li><li>二是语调构型正常，即音调、重音、连接自然。</li></ul><p>单独提出这一点是为了提醒大家，语块在语音维度往往是一个有机的整体，甚至可以把它看成是一个单词，如果不是有意识地注意它整体的语音，你是不可能过听力关的。</p><p>总之，从语块理论出发，改善听力不仅需要提高语义透明度，还要特别重视语块的自然语流，就像重视单词的读音一样，甚至比后者要更加值得重视。</p><h2 id="6-结语"><a href="#6-结语" class="headerlink" title="6. 结语"></a>6. 结语</h2><p>对于听看这两个输入过程，我建议在消除单词的形、音陌生感之后，大量阅读适合自己的原著。</p><p>输入阶段不太需要特别注意语块的训练，只需要明白：<strong>你的学习是为了提高语块的语义透明度</strong>。</p><p>有了这个指导思想和目标，相信你即使遇到困难，也能更好地贯彻执行下去。</p><p>至于说、写这两个输出过程，我建议当前先放弃掉，等听看过关了在练习也不迟，练习的时候，把主要精力放在提高相应话题的语块运用能力上就可以了。至于话题怎么展开，怎么论述，怎么构造角度，那是写作和谈吐的问题，不仅仅是英语的范畴。</p><p><small>微信：xiaoshentong360</small></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小神童提纯 </tag>
            
            <tag> 英语窍门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>养好身体，抡圆了活</title>
      <link href="/2019/03/yang-sheng.html"/>
      <url>/2019/03/yang-sheng.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-理念"><a href="#1-理念" class="headerlink" title="1. 理念"></a>1. 理念</h2><p>据我观察，凡是成长快速的群体其实没得取巧，最基础的就是时间精力的积累，拼到底就是好身体。</p><p>做人首务就是保养身体老本，就像周伯通那样，只要活得够久，啥都不是问题。</p><p>所以，将保养身体变成深入骨髓的本能，早睡早起，饮食有节，不烟不酒，每天锻炼，就这样尽力拉长人生的长度，过好每一天，把这辈子抡圆了活！</p><p>健康第一步就是健康意识的培养，深入学习健康相关知识，不管是选择中医还是西医，都必须付诸实践，在身体保养上有切实的作用。</p><blockquote><p>健康意识强的人就习惯性的每天吃早餐，饮用自己觉得舒服的水量，每工作一小时都会站起来做一些舒展动作，饮食清淡，营养均衡，每天 45 分钟有氧或是几组肌肉练习，这是日常的健康习惯。</p><p>即便是外出出差忙碌，包里永远都有清水和水果、酸奶等能量补充，会利用一切空闲比方说地铁等通勤时间来闭目休息，长途行程中说睡就能很快入睡，只要清醒永远都是精神矍铄，以最饱满的状态来面对工作。</p></blockquote><p>有人说每天必须睡 10 个小时才有精神，我可以肯定的说，除了婴儿和重病患者，没有必须得睡多少时间这一说，首先是认知上就限定了自己，不愿做出一点改变，再就是生理上垃圾太多，阻碍了身体机能，可以改进的方法是<code>少油盐、多蔬果，有氧加无氧每天 1 小时</code>，不出百日就能有明显改观。</p><p>还有人认为<del><strong>瘦=健康</strong></del>，实际上瘦绝对不等于健康，只不过没有肥胖并发症，瘦的人精力也不一定就好，好处是瘦人一般运动量足够，还要<code>以调整饮食为主</code>。</p><p>好身体的重要性是所有人都认同的，现在就应该马上行动培养健商、系统学习健康知识，然后付诸生活，让自己的革命老本更加丰厚，从自己做起，至少我们会给下一代树立良好的健康观，不会剥夺反而要鼓励他们运动，从这个角度来看，一身之健康，世代之健康，意义重大，从我做起来一起改变吧。</p><h2 id="2-行动"><a href="#2-行动" class="headerlink" title="2. 行动"></a>2. 行动</h2><hr><p><code>小神童</code></p><p>日常作息：23:00 - 5:30<br>锻炼：瑜珈六式 + 八段锦 + 冥想 + 俯卧撑 + 卷腹<br>饮食：以大量的绿色蔬菜为主，加小米汤，西红柿，牛油果，牛肉(黄牛肉炖汤)，鱼肉，少碳水，少油盐，用玉米或者土豆代替面食。</p><p><code>你:</code></p><hr><p>参考资料：</p><ul><li><a href="https://mp.weixin.qq.com/s/Dcy8uMk6bStkssNn5SJMJg" target="_blank" rel="noopener">养好身体，抡圆了活</a></li><li><a href="https://mp.weixin.qq.com/s/zM2-2NLf3TRydWiASK0bZg" target="_blank" rel="noopener">拼到底不过是好身体(一)</a></li><li><a href="https://mp.weixin.qq.com/s/0-WFzF9Z8IWNu8tLwZGuRw" target="_blank" rel="noopener">拼到底不过是好身体(二)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 养生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小神童提纯 </tag>
            
            <tag> 勇猛精进 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效学习之法</title>
      <link href="/2019/03/hexo-blog.html"/>
      <url>/2019/03/hexo-blog.html</url>
      
        <content type="html"><![CDATA[<p><strong>高效学习之法：</strong></p><p>想学什么，可以先假装已经会了什么…… 听起来很没道理，但你试试就知道了……</p><p>习得任何技能的最根本技巧，就是一句话而已：<strong>马上开始像那些已经精通这个技能的人一样生活。</strong></p><p>这是很重要的方法论，它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了……</p><p><code>开始吧！</code></p><p>我只不过 xxx 而已，还装得不够像…… 让我费一点周折，装得更像一点罢。</p><p>我从来都是这样的，装就装得真像 —— 这样后来就真的是了。你看，这有个 xxx，不妨打开看一看。接下来，跟着一步一步地走。这个过程其实不太费劲的，甚至很简单，相信自己。在这个过程中会七七八八学很多东西……</p><p>会感觉时间一晃就过去了 —— 因为会在这个过程中一不小心就进入所谓的 “flow”（心流）。学习从来不是杀时间的方式，恰恰相反，学习是“时间加速器”，它会让时间一晃而过，却又与此同时增加了时间质量与密度 —— 不可能没有感受的！</p><p>在这个过程中，我们会熟悉起来的东西包括：XXX</p><p><code>获得阶段性成果。</code></p><p>每一个尽管相当简单的步骤，都可能出现各种莫名其妙的错误，保持耐心，反复来过就好。</p><p>记住：</p><p><strong>保持耐心，反复来过，直至成功。</strong></p><p><code>继续折腾</code></p><p>没完事儿呢…… 这才刚刚开始，现在做出了 XXX，然后就要去做 XXX 了，当然，这之前，我们还要学会做更多的事情，包括很多非常细琐的东西。反正我们不着急。</p><p>这时遇到了麻烦，我想，别人肯定也遇到了一样的麻烦，所以，估计他们已经有了解决方案…… 于是，到 Google 里搜索了一下：XXX，果然有这种东西…… </p><p>这是学习过程中必须学会的思考模式（Mindset）和行为模式（Action Pattern）：</p><blockquote><ol><li>随时准备深入了解某个小领域</li><li>借助地球上最强大的人工智能（Google）找到学习资源</li><li>给自己一小段时间刻意练习</li><li>不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……</li><li>给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。</li></ol></blockquote><p>再提醒一遍，别忘了给自己洗脑：“<strong>只搜索、只阅读英文文档</strong>”，有中文的也不能看，就是不能看……</p><p><strong>还有就是，每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了。</strong></p><p>无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是“不怕麻烦，逐一完成”，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。</p><p>凡事道理都是一样的，我有一句口头禅：“<strong>偷懒的唯一方式就是不偷懒……</strong>” 也还是一样的道理。</p><p><code>一旦发现需要重复的工作……就要马上想办法。</code></p><p>要么 1) <strong>自动化</strong><br>要么 2) <strong>减少工作量</strong></p><p>这是工程师的思考行动方式，在工程师的世界里，懒惰有另外一种用处，是积极的用处：它是用来刺激寻找提高效率的手段。普通人懒起来就什么都不干了；工程师懒起来就使劲琢磨：</p><blockquote><ul><li>“怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”</li></ul></blockquote><p>注意：“<strong>实际上干更多</strong>”才是重点！</p><p><code>继续折腾</code></p><p><code>布置任务</code></p><p>现在就先完成任务，把 XXX 彻底熟悉了罢。等将来弄明白了 XXX 之类的东西之后，可以自己不断深入研究……</p><hr><hr><hr><p>原文：</p><p>使用 Hexo 为自己在 Github 上建一个静态 Blog 站点。</p><p>在开始之前就说过，必须去注册一个 Github 帐号…… 以下假定你已经注册好了。</p><p>想学什么，可以先假装已经会了什么…… 听起来很没道理，但你试试就知道了……</p><blockquote><p>习得任何技能的最根本技巧，就是一句话而已：<strong>马上开始像那些已经精通这个技能的人一样生活。</strong></p></blockquote><p>这是很重要的方法论，它会让你无视很多障碍，跨越很多障碍，甚至那些障碍对你来说就好像完全不存在一样。心理学家告诉我们，当你不开心的时候，假装开心，做出笑脸，过一会儿就没那么不开心了，甚至真的开心起来……</p><p>这个原理其实可以用在很多地方，比如，某项技能你不会，但你想会，那就从假装会了这个技能开始，然后当真去做、去学，没多久就真的会了……</p><p>我小时候学吉他也是这样，买来吉他其实是不会的啊，但也不知道为什么就是有欲望坐在那里乱弹一气，就好像会了一样 —— 可真的没多一会儿就开始渐渐调整自己，让手的拨动多少有点节奏…… 竟然比之前好听多了！</p><p>我们只不过注册了一个 Github 帐号而已，还装得不够像…… 让我们费一点周折，装得更像一点罢。</p><p>我从来都是这样的，装就装得真像 —— 这样后来就真的是了。你看，我有个网站：xiaolai.github.io，你不妨打开看一看。接下来，你就跟着我一步一步地给自己搭建一个跟工程师们用的一样的个人网站。</p><p>这个过程其实不太费劲的，甚至很简单，相信我。但在这个过程中你也一定会七七八八学很多东西……</p><p>你会感觉时间一晃就过去了 —— 因为你会在这个过程中一不小心就进入所谓的 “flow”（心流）。学习从来不是杀时间的方式，恰恰相反，学习是“时间加速器”，它会让时间一晃而过，却又与此同时增加了时间质量与密度 —— 你不可能没有感受的！</p><p>在这个过程中，我们会熟悉起来的东西包括：</p><blockquote><ul><li>命令行工具的使用</li><li>Atom 的使用</li><li>如何书写 Markdown 文档</li></ul></blockquote><p>开始罢。</p><h2 id="1-初步搭建"><a href="#1-初步搭建" class="headerlink" title="1. 初步搭建"></a>1. 初步搭建</h2><h3 id="1-1-在-Github-上创建一个-Repo"><a href="#1-1-在-Github-上创建一个-Repo" class="headerlink" title="1.1. 在 Github 上创建一个 Repo"></a>1.1. 在 Github 上创建一个 Repo</h3><p>在浏览器中登录 Github，创建一个 Repo，名称格式为 <code>yourname.github.io</code>。比如，我个人的 Github 账户用户名是 xiaolai，所以，我的这个 Repo 的名称就是 <code>xiaolai.github.io</code>。这个特殊的 Repo 有个审核过程，所以，创建完了之后，直接干下一步去……</p><h3 id="1-2-确认本地已经安装好-git-和-npm"><a href="#1-2-确认本地已经安装好-git-和-npm" class="headerlink" title="1.2. 确认本地已经安装好 git 和 npm"></a>1.2. 确认本地已经安装好 git 和 npm</h3><p>在 Terminal 里（或者 iTerm 里）输入以下命令确认 git 与 npm 已经安装妥当（第一章完成了的话，这些已经安装好了，若是没完成，请退回完成再回来重新继续……）</p><pre><code>git --versionnpm --version</code></pre><h3 id="1-3-安装-hexo"><a href="#1-3-安装-hexo" class="headerlink" title="1.3. 安装 hexo"></a>1.3. 安装 hexo</h3><p>在 Terminal 中继续输入</p><pre><code>npm install hexo -gnpm install hexo-cli -g</code></pre><h3 id="1-4-创建本地工作目录"><a href="#1-4-创建本地工作目录" class="headerlink" title="1.4. 创建本地工作目录"></a>1.4. 创建本地工作目录</h3><p>去 Github 把你的 Repo 的 git 地址拷贝出来。</p><blockquote><p>我的是：<br><code>https://github.com/xiaolai/xiaolai.github.io.git</code><br>你的是：<br><code>https://github.com/yourname/yourname.github.io.git</code> （其中，yourname 应该换成你的 Github 用户名）。</p></blockquote><p>然后在 Terminal 面板里输入</p><pre><code>cd ~/Publicgit clone https://github.com/yourname/yourname.github.io.git</code></pre><h3 id="1-5-初始化你的本地站点"><a href="#1-5-初始化你的本地站点" class="headerlink" title="1.5. 初始化你的本地站点"></a>1.5. 初始化你的本地站点</h3><pre class="line-numbers language-bash"><code class="language-bash">hexo init yourname.github.io<span class="token function">cd</span> yourname.github.io<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --savehexo generatehexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些完成之后，你就可以打开浏览器，在地址栏里输入： localhost:4000，在本地先看看网站是什么样子了。</p><h3 id="1-6-部署到-Github-上"><a href="#1-6-部署到-Github-上" class="headerlink" title="1.6. 部署到 Github 上"></a>1.6. 部署到 Github 上</h3><p>回到命令行下，输入</p><pre><code>atom .</code></pre><p>Atom 就会打开 yourname.github.io 这个文件夹…… 在计算机世界里，. 是个特殊字符，代表“所有的”（以后你会越来越了解的），所以，atom . 的意思相当于“用 Atom 这个程序打开当前目录内的所有文件”……</p><p>在 Atom 的左侧面板中，选择 _config.yml 文件，找到 deploy 哪一部分，改成：</p><pre><code>deploy:  type: git  repo: https://github.com/yourname/yourname.github.io.git</code></pre><p>注意，把 yourname 改成你的 Github 用户名。</p><p>现在是最后一步了，在 Terminal 里依次输入：</p><pre><code>hexo deployopen yourname.github.io</code></pre><h3 id="1-7-阶段性成果"><a href="#1-7-阶段性成果" class="headerlink" title="1.7. 阶段性成果"></a>1.7. 阶段性成果</h3><p>稍等一下，你就可以看到默认浏览器被打开，且已经浏览到 yourname.github.io 这个网址了……（嗯…… 工程师们打开浏览流程的姿势都不太一样…… 对了，试试 <code>open .</code> 会发生什么？）</p><p>简单吧？！</p><p>不一定很简单 —— 对新手因为上面的过程中，每一个尽管相当简单的步骤，都可能出现各种莫名其妙的错误（比如，不小心使用了中文输入法的点字符“。”等等）…… 保持耐心，反复来过就好。</p><p>不妨再说一遍，因为这是工程师必备的素质（其实是任何人在任何领域都应该必备的素质）：</p><p><strong>保持耐心，反复来过，直至成功。</strong></p><h2 id="2-继续折腾"><a href="#2-继续折腾" class="headerlink" title="2. 继续折腾"></a>2. 继续折腾</h2><p>没完事儿呢…… 这才刚刚开始，你现在有了个个性化域名，有了个所有人都可通过它访问的站点，然后就要做起码两件事儿了：</p><blockquote><ul><li>学会在本地使用 Markdown 书写文章，而后发布到网上；</li></ul><ul><li>把站点装扮得更好看一些。</li></ul></blockquote><p>当然，这之前，我们还要学会做更多的事情，包括很多非常细琐的东西。反正我们不着急。</p><h3 id="2-1-给-Atom-安装一个命令行面板"><a href="#2-1-给-Atom-安装一个命令行面板" class="headerlink" title="2.1 给 Atom 安装一个命令行面板"></a>2.1 给 Atom 安装一个命令行面板</h3><p>有一个 Atom Package，可以在 Atom 里调用 Terminal 面板，叫 <a href="https://atom.io/packages/platformio-ide-terminal" target="_blank" rel="noopener">platformio-ide-terminal</a> 不妨装上玩玩。我是怎么想到找这个东西的呢？很简单，经常需要从 Atom 切换到 Terminal / iTerm …… 工程师们肯定也一样觉得麻烦，所以，估计他们已经有了解决方案…… 于是，到 Google 里搜索了一下：</p><blockquote><p>terminal in Atom</p></blockquote><p>果然有这种东西…… 希望你现在已经对命令行有一定了解了，没有的话，回去第一章再看看你找到的那个 Cheatsheet 罢，边看边练。</p><p>这是学习过程中必须学会的思考模式（Mindset）和行为模式（Action Pattern）：</p><blockquote><ol><li>随时准备深入了解某个小领域</li><li>借助地球上最强大的人工智能（Google）找到学习资源</li><li>给自己一小段时间刻意练习</li><li>不怕死记硬背，更要善于死记硬背，通过短时间内的大量重复，把那些别人看起来枯燥的东西迅速变成自己“内建的技能” —— 通过刻意练习将其熟练到“想都不用想就能用的地步”……</li><li>给自己定个“最后期限”，比如一小时之内一定做到把这些命令谙熟于心…… 绝对不能“过些天就想不起来了”，否则，那就是思考监管的“只因为学习习惯不好造成的永久性愚蠢”。</li></ol></blockquote><p>再提醒一遍，别忘了给自己洗脑：“<strong>只搜索、只阅读英文文档</strong>”，有中文的也不能看，就是不能看……</p><p><strong>还有就是，每次脑子里闪出“呀，好麻烦！”这个念头的时候，就要知道自己脑子脏了，该洗了。</strong></p><p>无论干什么都挺麻烦的，怕麻烦的人什么都做不成，躲避麻烦的唯一正确方式就是“不怕麻烦，逐一完成”，否则就会反复麻烦一辈子又一辈子（甚至会遗传，不耐心的父母必然养出不耐心的孩子）。</p><p>凡事道理都是一样的，我有一句口头禅：“<code>偷懒的唯一方式就是不偷懒……</code>” 也还是一样的道理。</p><h3 id="2-2-为-Atom-安装-markdown-相关-Packages"><a href="#2-2-为-Atom-安装-markdown-相关-Packages" class="headerlink" title="2.2 为 Atom 安装 markdown 相关 Packages"></a>2.2 为 Atom 安装 markdown 相关 Packages</h3><p>Markdown 是程序员们最喜欢用的书写工具，是一种简化版的文字标记方式，你的 yourname.github.io 站点上的文章，就得用这种方式书写。怎么用、怎么写？Google github markdown 就知道了，别忘了在搜索一遍 github markdown cheatsheet，嗯，这个基本上用不着刻意练习 —— 因为它太简单，另外也因为反正你以后天天用。</p><p>点击 Preference 的左侧倒数第二项 <code>+ install</code>，在搜索框中输入 <code>markdown</code>，依次安装一下几个 Package：</p><blockquote><ul><li>markdown-scroll-sync</li><li>linter-markdown</li><li>markdown-writer</li><li>markdown-toc</li><li>markdown-pdf</li><li>markdown-preview</li></ul></blockquote><p>设置一遍 markdown-writer，你就知道应该如何设置其它的 Package 了。还是进入 <code>Preference</code>，在左侧选择 <code>Packages</code>，在右侧找到 <code>markdown-writer</code>，点击 <code>Settings</code> 按钮…… 然后在里面上下翻一翻。在 <code>Site Engine</code> 里，竟然直接有个 <code>Hexo</code> 选项…… 真好！勾选罢！</p><p>另外，如果快捷键 <code>⌘b</code>、<code>⌘i</code> 之类的不起作用，那么可以把以下代码拷贝粘贴到 <code>keymap.cson</code> 文件中（在 <code>Preference</code> 中点击左侧第二项 <code>Keybindings</code>，即可打开这个文件），随后用 <code>⌘s</code> 保存之后重新启动 Atom 即可（或者在 <code>Command Palette</code> 里使用 <code>Windows: Reload</code> 命令）。</p><pre><code># for markdown-writer&quot;.platform-darwin atom-text-editor:not([mini])&quot;:  &quot;shift-cmd-K&quot;: &quot;markdown-writer:insert-link&quot;  &quot;shift-cmd-I&quot;: &quot;markdown-writer:insert-image&quot;  &quot;cmd-i&quot;:       &quot;markdown-writer:toggle-italic-text&quot;  &quot;cmd-b&quot;:       &quot;markdown-writer:toggle-bold-text&quot;  &quot;cmd-&#39;&quot;:       &quot;markdown-writer:toggle-code-text&quot;  &quot;cmd-k&quot;:       &quot;markdown-writer:toggle-keystroke-text&quot;  &quot;cmd-h&quot;:       &quot;markdown-writer:toggle-strikethrough-text&quot;  &#39;cmd-&gt;&#39;:       &quot;markdown-writer:toggle-blockquote&quot;  &#39;cmd-&quot;&#39;:       &quot;markdown-writer:toggle-codeblock-text&quot;  &quot;ctrl-alt-1&quot;:  &quot;markdown-writer:toggle-h1&quot;  &quot;ctrl-alt-2&quot;:  &quot;markdown-writer:toggle-h2&quot;  &quot;ctrl-alt-3&quot;:  &quot;markdown-writer:toggle-h3&quot;  &quot;ctrl-alt-4&quot;:  &quot;markdown-writer:toggle-h4&quot;  &quot;ctrl-alt-5&quot;:  &quot;markdown-writer:toggle-h5&quot;  &quot;shift-cmd-O&quot;: &quot;markdown-writer:toggle-ol&quot;  &quot;shift-cmd-U&quot;: &quot;markdown-writer:toggle-ul&quot;  &quot;cmd-j cmd-p&quot;: &quot;markdown-writer:jump-to-previous-heading&quot;  &quot;cmd-j cmd-n&quot;: &quot;markdown-writer:jump-to-next-heading&quot;  &quot;cmd-j cmd-d&quot;: &quot;markdown-writer:jump-to-reference-definition&quot;  &quot;cmd-j cmd-t&quot;: &quot;markdown-writer:jump-to-next-table-cell&quot;</code></pre><p><strong>注意</strong></p><p>在 Atom 里，<code>⌘k</code> 默认被设置成了一些双组合键的第一个，比如，你按过一次 <code>⌘k</code> 之后再按右方向键 <code>→</code> 的话，你当前的输入区域就会在一个新生成的右侧面板（Right Pance）上打开一份…… 所以，你想输入这样的文字之时：</p><blockquote><p>k</p></blockquote><p>你的按键顺序是这样的（最后一个 <code>⎋</code> 是键盘最左上角的 <code>esc</code> 键盘）</p><blockquote><p>k，⇧←，⌘k，⎋</p></blockquote><h3 id="2-3-学习使用-markdown-书写文章并发布"><a href="#2-3-学习使用-markdown-书写文章并发布" class="headerlink" title="2.3 学习使用 markdown 书写文章并发布"></a>2.3 学习使用 markdown 书写文章并发布</h3><p>这次我们走另外一个路径。关掉所有程序，重新来过。用 Spotlight 打开 Terminal，输入</p><pre><code>cd ~/Public/yourname.github.io</code></pre><p>输入方法是这样的：输入 <code>cd ~/Pu</code> 之后，就按一下 <code>⇥</code>（Tab 键），应该能自动补全为 <code>cd ~/Public/</code>，接着再输入 <code>yourname</code>…… 其实可能输入前两个字符的时候已经可以用 <code>⇥</code> 完成自动补全了。补全之后，就可以直接按 <code>⏎</code>（回车键）进入你的目标目录了。</p><p>然后再输入命令：</p><pre><code>atom .</code></pre><p>进而用 Atom 打开当前目录中的所有文件。</p><p>在右侧的面板里展开 <code>source</code> 目录，进一步再展开 <code>_posts</code> 目录，点击 <code>hello-world.md</code> 文件，正文编辑器里所显示的就是你现在能在网站上看得到的 hello-world 的源文件了。</p><p>随便在那里面写任何内容，用一下你已经习得的 markdown 标记，玩玩。由于已经安装了 markdown-preview，所以在书写 Markdown 文档的时候，随时可以用 <code>⇧⌃m</code> 呼出预览，甚至可以实时更新预览。（不过，预览的时候和最终发布的时候看起来稍微不一样，自己体会一下……）</p><p>然后就可以在 Terminal 面板中用 <code>hexo generate</code> 生成静态 html 文件，用 <code>hexo server</code> 本地查看（在浏览器中用这个地址：<code>localhost:4000</code>），或用 <code>hexo deploy</code> 发布到 <code>yourname.github.io</code> 上去……</p><p>以后你想发表博客文章的时候，无非就是在 <code>source</code> 目录中创建新的 <code>.md</code> 文件，而后 <code>hexo generate</code>，之后再 <code>hexo deploy</code>.</p><h3 id="2-4-一旦发现需要重复的工作……"><a href="#2-4-一旦发现需要重复的工作……" class="headerlink" title="2.4 一旦发现需要重复的工作……"></a>2.4 一旦发现需要重复的工作……</h3><p>就要马上想办法</p><p>要么 1) <strong>自动化</strong>，<br>要么 2) <strong>减少工作量</strong>。</p><p>这是工程师的思考行动方式，在工程师的世界里，懒惰有另外一种用处，是积极的用处：它是用来刺激寻找提高效率的手段。普通人懒起来就什么都不干了；工程师懒起来就使劲琢磨：</p><ul><li>“怎么做才能将来不用做或者起码少做却可以实际上干更多呢？”</li></ul><p>注意：“<strong>实际上干更多</strong>”才是重点！</p><p>反复地敲 <code>hexo generate</code>、<code>hexo server</code>、<code>hexo deploy</code> 好累啊！怎么办？我们可以给命令行里反复输入的命令编制缩写……</p><p>命令行下输入，其实就是用 <code>Atom</code> 打开 <code>~/.aliases</code> 文件：</p><pre><code>atom ~/.aliases</code></pre><p>在该文件下输入以下内容：</p><pre><code>alias hgs=&quot;hexo g&amp;&amp;hexo s&quot;alias hgd=&quot;hexo g&amp;&amp;hexo d&quot;</code></pre><p>重新启动 Terminal 之后，只要输入 <code>hgs</code> 就是生成内容之后在 localhost:4000 里预览，输入 <code>hgd</code> 就是部署到服务器上……</p><p>能这么做的原因在于之前在配置开发环境的时候输入过这么三个命令：</p><pre><code>https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profilecurl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_promptcurl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</code></pre><p><code>.bash_profile</code> 文件里引用了 <code>.bash_prompt</code> 和 <code>.aliases</code>，每次启动 <code>Terminal</code> 的时候，它都会引用 <code>.bash_profile</code> 里的设置，所以，以后你就可以把所有你需要的缩写都放到 <code>.aliases</code> 文件里去。</p><p>比如我这个懒蛋就用来好几个这样的缩写：</p><pre><code>alias -=&quot;cd -&quot;alias ~=&quot;cd ~&quot;alias ..=&quot;cd ..&quot;alias ...=&quot;cd ../..&quot;alias ....=&quot;cd ../../..&quot;alias bp=&quot;atom ~/.bash_profile&quot;alias bpr=&quot;source ~/.bash_profile&quot;</code></pre><p>所以，我需要修改 <code>~/.bash_profile</code> 文件的时候，就在 <code>Terminal</code> 里输入 <code>bp</code>，修改完了之后，保存好，然后在 Terminal 里输入 <code>bpr</code> 就行了，不用为了更改生效而重启 Terminal。</p><h2 id="3-任务"><a href="#3-任务" class="headerlink" title="3. 任务"></a>3. 任务</h2><p>接下来你要做的是，以后经常写文章发表在网上 —— 衡量标准倒是有一个：</p><ul><li>尽量只写对别人有用的文章……</li></ul><p>毕竟这是发表在网上的基本意义之一。</p><p>在接下来的时间里，若是有空，就给自己的 Blog 换个模板；加上评论，加上搜索，加上统计，加上…… 反正，在 Google 上随便一搜，每个任务都有很多教程 —— 自力更生好了。</p><p>等将来弄明白了 html/jade、css/less/sass/ 之类的东西之后，也可以自己不断深入定制…… 现在就先在使用中把 <a href="https://help.github.com/categories/writing-on-github/" target="_blank" rel="noopener">(github flavored) Markdown</a> 彻底熟悉了罢。</p><hr><p>来源: xiaolai<br>作者: 李笑来<br>链接: <code>http://suo.im/4qK8wp</code><br>本文章著作权归作者所有，任何形式的转载都请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 技术工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
            <tag> 小神童提纯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语学习开篇之悟</title>
      <link href="/2019/03/learning-english.html"/>
      <url>/2019/03/learning-english.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学英语不是为了完成一个什么样的目标，而是为了发展一个系统，目标是具象的、有反馈的，成功就有某种回报，失败就算白干，而系统则是联系变化的东西，系统有了，一切自然发生。</p></blockquote><p>学一门语言不是为了完成目标，而是为了学以致用。</p><p>多看看世界，多理解理解别人的文化，才会真正强大，学外语就是为了掌握别人的文化，不是把别人的文化套进自己的文化中去理解。</p><p><strong>国人一般学的是英语翻译，不是英语。</strong></p><p>学语言是持续积累的过程，最好的学习状态是婴儿状态，无所顾忌的吸收外界信息。</p><p>我用了几年时间才悟透，语言就是一个不讲道理的东西。你告诉我为什么是一<code>匹</code>马，一<code>个</code>杯子，一<code>棵</code>树，白人，黑人，黄<code>种</code>人，为什么过夜的地方叫酒店，喝酒的地方叫夜店，明明是馍夹肉，偏偏要叫肉夹馍……</p><p>估计你都不知道，只是都这么说，就习惯这么说了，从来都没有想过这些个问题，其实这就是正确的学习方式。如果你花大量时间把这些来龙去脉都弄明白了，那你已经是语言文学大师了，不是语言使用者。</p><p><strong>只有考试试卷才讲道理，学语言就是要大量浸泡，不求甚解。</strong></p><p>在没有大量浸泡英语之前，没有必要打破砂锅问到底，就直接去模仿使用，看见酒店那就是酒店，看见夜店那就是夜店，管它为啥要叫这个名字呢？只要这个名字别人都懂就行。</p><p>学语言是熟能生巧的过程，不是说看到一个句子，能分析的头头是道就牛逼，专门研究句子成分是专业研究人员做的事情，非研究人员不用去研究。</p><p>英语交流的过程当中，0.3 秒就要说一个单词，根本没有给你思考的时间，也没有给你想语法的时间，你只有直觉的反应，没时间各种加工的。</p><p><strong>所以，我们要熟能生巧，练就出本能反应。</strong></p><p>小孩子用九个月默默听，用三年训练口腔说话，再用几年进一步矫正，才开始上小学，这都是逐步积累的过程。</p><p>成年人很容易急功近利，恨不得把什么都弄懂了心里才踏实，生怕出错出丑面子上挂不住。其实这些都是心理障碍，错就错了，忘记了就忘记了，完全没有任何关系。</p><p>是个正常人都喜欢忘记，你要做的事情就是不要自己加工翻译成汉语，而是学会去接纳英语本来的面目。</p><h3 id="英语是重视听的语言"><a href="#英语是重视听的语言" class="headerlink" title="英语是重视听的语言"></a>英语是重视听的语言</h3><p>语言最本质的就两点：<strong>听和说。</strong></p><p>英语是重视听的语言，练习英语听力时能不看文字就不看文字，<strong>用心去听清才是关键</strong>，他们对写的要求没那么严格。</p><p>另外英国文化和和中国农耕文明差别太多，文化差异导致很多事情我们不好理解。</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1g0skaixk3rj30u014eq74.jpg" alt></p><p>虽然这些很不符合汉语习惯，但还是得“入乡随俗”，这些差异要自然而然接受，不要总是用汉语那套。</p><p>如果你目前接受起来困难，也从侧面说明了你目前兼容并济的心态不足，个人修养不够，不够开放包容，不过你们在接受这些别扭的东西时，也是在修炼一颗包容接纳之心，相辅相成，提升空间还挺大的。</p><h3 id="重点来了！"><a href="#重点来了！" class="headerlink" title="重点来了！"></a>重点来了！</h3><p>作为中国人，大部分人学英语的目标是为了获取信息，就像你看繁体字一样，管它认识不认识会不会写？连蒙带猜理解到意思就 OK 了。</p><p>当你从细枝末节学起来时，发现永远也学不完，永远学不对，总有很多不如人意的地方，所以不要以 ”语法“、”单词” 为中心去学习，先“不求甚解”地大量输入，跟婴儿一样，然后靠自己从中寻找语言的规律。</p><p>也就是当你看（听）不懂一段外语时，不要想着把它理解透彻，只需要尽力而为、顺其自然就好。</p><p>见多才会识广，在这件事上一开始就盯着细节永远走不远，因为难度太高会让你畏惧前行。所以我们先走量。</p><p>要用玩的心态去看每一个单词，句子，段落，文章。</p><p>市面上那些背单词的软件统统不要看，那是为弱者而生的，你有背汉语的软件吗？</p><p>没有说明你也不需要背英语单词的，要相信自己的大脑是很强大的。</p><p>俗话说，一回生二回熟，多见几次自然就熟悉了，就有亲切感了。那些见一次就再也见不到的东西，完全没必要浪费时间在他们身上。</p><p><strong>看听都是输入的过程，大家先保证足够的输入量，再谈其他的。</strong></p><p>当你没有单词，语法的羁绊，再加上不求甚解，整个人会轻松很多。这样跑得快了，你会产生顿悟的感觉，不自觉想回头理解以前看不懂的东西。</p><p><code>我一个外国朋友告诉我，她们学英语从不看音标。</code>我们耳朵不灵光了，还是需要学学。不然你很容易用熟悉的发音去替代相近的声音。</p><p>我选择的赖世雄的美式音标课程，文字版 + 音频版本。</p><blockquote><p>对于成年学习音标的普通朋友，我推荐且仅推荐赖世雄美语音标。pronunciation 部分的学习材料不在于多，而在于精。</p><p>之所以只推荐赖世雄，是因为我们在学习外语的时候存在“感知磁化效应”。接触英语的时，你会本能地找母语里跟他发音相似的东西来替代，比如 down，中国人很容易发成 dang，这不是口音的问题了，根本就是错误。do 会发成 du。英文的元音基本没有和汉语元音有 100% 的对应。</p><p>如果一开始小的时候没有很好的发音习惯，你现在纠正发音如果只是去听正确的音是不太可能有很大提高的，<strong>因为你已经把母语相似音和英语发音给完全混淆了</strong>。这时候一个熟悉这两种语言的人来给你分辨的话，这样子你的发音学习才能够绕开汉语的干扰，毫无疑问赖世雄就能做到这一点。</p><p>所以对于成年人纠正发音的时候，一开始还是不要去听老外的。</p><p>赖世雄会挑出中国人常犯的错误，然后把这个错误夸张和放大，让你能意识到自己的差距在哪里，这是只会英语的人士无法做到的。并且你如果有自己的方言的话，从你的方言里去寻找英语元音的发音技巧，有些发音相比于普通话更接近英语。</p><p><strong>最后，发音不如语调重要，语调不如表达地道重要。</strong></p></blockquote><p>对于这本教材，目前我给的目标只有一个：听清发音，书中的其他内容都不是重要的，略过即可，不用耗费太多时间在其他的上面。千万注意，其他的再美好也别留恋。</p><p>看这本书只是在心中建立一个标准，具体的等到你听外国人真正的发音时，会在这个标准上千变万化，如果你死板的去围绕书中的音标发音，外国人听起来绝对很别扭的。</p><p><strong>音频建议戴耳机，找个安静的地方，声音开大点，细细体会感悟。</strong></p><ul><li>各位切记，完美主义是人生的大敌。</li></ul><p>你们的目标是听音标的发音，主要是要知道你们以前哪里有没有错的，别的都不需要浪费时间，别本末倒置。</p><p>看书听音频的时候别听他怎么说，记住自己的目的。音频很多地方是可以剪掉的，书也是一样，就算你们认真照着练习，过几天依旧会忘记，除非一直练习下去，但这是不现实的，所以快速过一遍，留个印象就可以了，以后听不懂了，你们自然会来查了比对，来来回回几次，该记住的就永久记住了。</p><p>只要你们不写，就不需要背单词，认识繁体字但不会写繁体字，影响了你吗？并没有吧，这个也一样。 </p><p>抛弃传统观念，跟着我走就好了。</p><p>微信：xiaoshentong360</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语文化 </tag>
            
            <tag> 小神童原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
